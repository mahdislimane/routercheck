{"version":3,"sources":["component/Category.js","component/productItem.js","component/Products.js","component/Navbar.js","component/home.js","component/AdminSection.js","component/PrivateRoute.js","component/Login.js","App.js","serviceWorker.js","index.js"],"names":["Category","props","to","match","url","path","render","params","category","ProductItem","productItem","productData","filter","product","id","productId","name","description","status","Products","linkList","map","el","className","style","backgroundColor","textAlign","exact","NavBar","Navbar","bg","variant","Nav","Button","Home","AdminSection","PrivateRoute","Component","component","connected","rest","pathname","state","from","location","Login","useState","showpass","setshowpass","showhide","setshowhide","password","information","setInformation","conVal","setconVal","showHide","e","preventDefault","handleChange","target","value","logVerif","alert","padding","display","justifyContent","width","type","placeholder","onChange","onClick","textDecoration","color","App","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.be0b56c7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, Route } from \"react-router-dom\";\r\n\r\nexport default function Category(props) {\r\n  return (\r\n    <div>\r\n      <Link to={`${props.match.url}/Shoes`}>\r\n        <button>Shoes</button>\r\n      </Link>\r\n      <Link to={`${props.match.url}/Boots`}>\r\n        <button>Boots</button>\r\n      </Link>\r\n      <Link to={`${props.match.url}/Footwear`}>\r\n        <button>Footwear</button>\r\n      </Link>\r\n      <Route\r\n        path={`${props.match.path}/:category`}\r\n        render={(props) => <h3> {props.match.params.category} </h3>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ProductItem(props) {\r\n  let productItem = props.productData.filter(\r\n    (product) => product.id == props.match.params.productId\r\n  )[0];\r\n  return (\r\n    <div>\r\n      <h1> {productItem.name} </h1>\r\n      <p> {productItem.description} </p>\r\n      <hr />\r\n      <h4> {productItem.status} </h4>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport ProductItem from \"./productItem\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport default function Products(props) {\r\n  const productData = [\r\n    {\r\n      id: 1,\r\n      name: \"NIKE Liteforce Blue Sneakers\",\r\n      description:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin molestie.\",\r\n      status: \"Available\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Stylised Flip Flops and Slippers\",\r\n      description:\r\n        \"Mauris finibus, massa eu tempor volutpat, magna dolor euismod dolor.\",\r\n      status: \"Out of Stock\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"ADIDAS Adispree Running Shoes\",\r\n      description:\r\n        \"Maecenas condimentum porttitor auctor. Maecenas viverra fringilla felis, eu pretium.\",\r\n      status: \"Available\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"ADIDAS Mid Sneakers\",\r\n      description:\r\n        \"Ut hendrerit venenatis lacus, vel lacinia ipsum fermentum vel. Cras.\",\r\n      status: \"Out of Stock\",\r\n    },\r\n  ];\r\n  let linkList = productData.map((el) => {\r\n    return (\r\n      <li>\r\n        <Link to={`${props.match.url}/${el.id}`}> {el.name} </Link>\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"container-fluid row\">\r\n      <div className=\"col-6\" style={{ backgroundColor: \"beige\" }}>\r\n        <h3>Products</h3>\r\n        <ul> {linkList} </ul>\r\n      </div>\r\n      <div className=\"col-6\">\r\n        <Route\r\n          path={`${props.match.path}/:productId`}\r\n          render={(props) => (\r\n            <ProductItem {...props} productData={productData} />\r\n          )}\r\n        />\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <Route\r\n            exact\r\n            path={`${props.match.path}/`}\r\n            render={(props) => <p>Please select a product.</p>}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar, Nav, Button } from \"react-bootstrap\";\r\n\r\nexport default function NavBar(props) {\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"primary\" variant=\"dark\">\r\n        <Nav className=\"mr-auto\">\r\n          <Link to=\"https://mahdislimane.github.io/routercheck/\">\r\n            <Button>Home</Button>\r\n          </Link>\r\n          <Link to=\"https://mahdislimane.github.io/routercheck/category\">\r\n            <Button>Category</Button>\r\n          </Link>\r\n          <Link to=\"https://mahdislimane.github.io/routercheck/products\">\r\n            <Button>Products</Button>\r\n          </Link>\r\n          <Link to=\"https://mahdislimane.github.io/routercheck/login\">\r\n            <Button>Login</Button>\r\n          </Link>\r\n        </Nav>\r\n        {/* <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n          <Button variant=\"outline-light\">Search</Button>\r\n        </Form> */}\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div>\r\n      <h1>Home</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nexport default function AdminSection() {\r\n  return <h1>welcome Admin</h1>;\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, connected, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        connected ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"https://mahdislimane.github.io/routercheck/login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useState } from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport AdminSection from \"./AdminSection\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"../App.css\";\r\n\r\nexport default function Login(props) {\r\n  const [showpass, setshowpass] = useState(\"password\");\r\n  const [showhide, setshowhide] = useState(\"show\");\r\n  const [information, setInformation] = useState({\r\n    name: \"\",\r\n    password: \"\",\r\n  });\r\n  const [conVal, setconVal] = useState(false);\r\n  const showHide = (e) => {\r\n    showpass === \"password\" ? setshowpass(\"text\") : setshowpass(\"password\");\r\n    e.preventDefault();\r\n    showhide === \"show\" ? setshowhide(\"hide\") : setshowhide(\"show\");\r\n  };\r\n  const handleChange = (e) => {\r\n    setInformation({ ...information, [e.target.name]: e.target.value });\r\n  };\r\n  const logVerif = () => {\r\n    information.name === \"admin\"\r\n      ? information.password === \"admin\"\r\n        ? setconVal(true)\r\n        : alert(\"use 'admin' as a name and password\")\r\n      : alert(\"use 'admin' as a name and password\");\r\n  };\r\n  return (\r\n    <div\r\n      className=\"container-fluid row\"\r\n      style={{ padding: \"100px\", display: \"flex\", justifyContent: \"center\" }}\r\n    >\r\n      <Route\r\n        exact\r\n        path=\"https://mahdislimane.github.io/routercheck/login\"\r\n        render={() => (\r\n          <Link to=\"https://mahdislimane.github.io/routercheck/login/log\">\r\n            <Button>Login</Button>\r\n          </Link>\r\n        )}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"https://mahdislimane.github.io/routercheck/login/log\"\r\n        render={() => (\r\n          <form className=\"container-fluid row\" style={{ width: \"500px\" }}>\r\n            <div className=\"inputForm col-4 \"> Name: </div>\r\n\r\n            <input\r\n              className=\"inputForm col-8\"\r\n              type=\"text\"\r\n              placeholder=\"admin\"\r\n              name=\"name\"\r\n              value={information.name}\r\n              onChange={handleChange}\r\n            ></input>\r\n\r\n            <div className=\"inputForm col-4\">Password: </div>\r\n            <input\r\n              className=\"inputForm col-6\"\r\n              type={showpass}\r\n              placeholder=\"admin\"\r\n              name=\"password\"\r\n              value={information.password}\r\n              onChange={handleChange}\r\n            ></input>\r\n            <Button className=\"inputForm col-2\" onClick={showHide}>\r\n              {showhide}\r\n            </Button>\r\n\r\n            <div\r\n              className=\"inputForm col-12\"\r\n              style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n              <Link to=\"https://mahdislimane.github.io/routercheck/login/sectionadmin\">\r\n                <Button onClick={logVerif}>\r\n                  <h6 style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                    Login\r\n                  </h6>\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        )}\r\n      />\r\n      <div>\r\n        <PrivateRoute\r\n          path=\"https://mahdislimane.github.io/routercheck/login/sectionadmin\"\r\n          connected={conVal}\r\n          component={AdminSection}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Category from \"./component/Category\";\nimport Products from \"./component/Products\";\nimport NavBar from \"./component/Navbar\";\nimport Home from \"./component/home\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Login from \"./component/Login\";\n\nexport default function App(props) {\n  return (\n    <div>\n      <Route\n        path=\"https://mahdislimane.github.io/routercheck/\"\n        component={NavBar}\n      />\n      <Switch>\n        <Route\n          exact\n          path=\"https://mahdislimane.github.io/routercheck/\"\n          component={Home}\n        />\n        <Route\n          path=\"https://mahdislimane.github.io/routercheck/category\"\n          component={Category}\n        />\n        <Route\n          path=\"https://mahdislimane.github.io/routercheck/products\"\n          component={Products}\n        />\n        <Route\n          path=\"https://mahdislimane.github.io/routercheck/login\"\n          component={Login}\n        />\n      </Switch>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}